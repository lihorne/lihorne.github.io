@import "modules/post/variables";
@mixin galileo-post {
    .post::after {
        @include retina-background-image($img-separator);
        background-repeat: no-repeat;
        background-position: center bottom;
        background-color: transparent;
        content: "";
        width: 100%;
        max-width: 596px;
        height: 42px;
        display: block;
        margin: 20px auto 50px;

        // Force background size to remain constant and not scale down
        background-size: 596px !important;

        // The breakpoint here was entirely guessed and tested by eye-balling the results
        // ie. feel free to choose something more sensible
        @include min-breakpoint(645px) {
            margin-top: 5px;
        }
    }

    .post-title {
        font-family: $title-font-family;
        display: block;
        font-weight: 700;
        font-size: $post-title-min-font-size;
        text-align: center;
        line-height: 1.4;

        // Force default text colour [as post-header is wrapped by a link]
        color: $text-color;

        @include min-breakpoint($post-title-medium-breakpoint) {
            font-size: $post-title-medium-font-size;
        }

        @include min-breakpoint($desktop-breakpoint) {
            font-size: $post-title-max-font-size;
        }
    }

    h1 {
        font-family: $banner-font-family;
    }

    .post-date {
        display: block;
        border-top: 1px solid $border-color;
        border-bottom: 1px solid $border-color;
        text-align: center;
        color: $legal-text-color;
        margin: 15px 0 25px;
        font-variant: small-caps;
        letter-spacing: 0.06em;

        // Fix typekit line-height with excess top padding
        padding: 23px 0 13px;
    }

    @include typekit-fallback {
        .post-date {
            // Reset a reasonable top padding in absence of abnormally tall typekit font line-height
            padding-top: 18px;
        }
    }

    .post-body {
        p {
            text-align: justify;
            line-height: $post-line-height;
            margin-bottom: 25px;
        }
    }

    .post-body-location,
    .post-body-location-divider {
        float: left;
    }

    .post-body-location {
        font-family: $caption-font-family;
        letter-spacing: 0.04em;
        text-transform: uppercase;
        margin-right: 5px;

        // A line-height of 1.2 makes our font (Bodoni) align well horizontally with
        // the paragraph font (Caslon) however we need to ensure that the location
        // text displays nicely if wrapped across multiple lines. To solve this,
        // we increase the line-height while offsetting its position upwards slightly.
        // This will keep the alignment between Bodoni & Caslon AND wrap nicely.
        line-height: 1.4;
        position: relative;
        top: -2px;
    }

    .post-body-location-divider {
        margin-right: 6px;
        line-height: 1.4;
    }

    .post-image {
        margin-bottom: 25px;
        margin-top: 30px;

        // Prevent any whitespace positioning issues
        font-size: 0;

        img,
        video{
            max-width: 100%;
            height: auto;
            margin: 0 auto;
            display: block;
        }

        & + .post-image {
            margin-top: -5px;
        }

        & + p {
            margin-top: 35px;
        }
    }

    .post-image--split {
        @include min-breakpoint($image-splitting-breakpoint) {
            margin-right: -1 * $post-image-split-gutter;
        }

        img {
            width: 100%;
            display: block;
            margin-bottom: $post-image-split-gutter;

            @include min-breakpoint($image-splitting-breakpoint) {
                width: $post-image-split-width;
                margin-right: $post-image-split-gutter;
                display: initial;
                margin-bottom: 0;
            }

            @include min-breakpoint($desktop-breakpoint) {
                max-width: $post-image-split-max-width;
            }
        }

        .post-image-caption {
            @include min-breakpoint($image-splitting-breakpoint) {
                margin-right: $post-image-split-gutter;
            }
        }
    }

    .post-image-caption {
        margin-top: 25px;
        color: $caption-text-color;
        font-family: $caption-font-family;
        line-height: $post-image-caption-line-height;
        padding: 0 20px;

        // Re-set the font size as parent is set to zero
        font-size: $base-font-size;

        // Override properties meant for article content paragraphs
        margin-bottom: 0 !important;
        text-align: center !important;

        &::after {
            display: block;
            content: "";
            width: 185px;
            margin: 23px auto 30px;
            border-bottom: 3px double $border-color;
        }
    }

    @include typekit-fallback {
        .post-image-caption {
            // Our fallback font is much larger, so we need to reduce the font-size and increase the line-height
            font-size: 15px;
            line-height: 1.8 !important;

            &::after {
                // Reset a reasonable top margin in absence of the abnormally tall typekit font line-height
                margin-top: 25px;
            }
        }
    }

    .post-footer {
        @include min-breakpoint($desktop-breakpoint) {
            // Child is floated, so use a clearfix on the parent
            @include clearfix;
        }
    }

    .post-footer-location {
        display: none;

        @include min-breakpoint($desktop-breakpoint) {
            @include retina-background-image($img-location);
            display: block;
            background-repeat: no-repeat;
            background-position: right center;
            background-color: transparent;
            background-size: 44px;
            min-height: 21px;
            padding-right: 55px;
            float: right;

            // The font used (Adobe Caslon Pro) has a peculiar line-height. This
            // adjusts the position of the text in relation to the icon without
            // adjusting the line-height property itself
            margin-top: -9px;
            padding-top: 9px;

            // Force legal text colour [as it is a link]
            color: $legal-text-color;

            // However let the normal hover colour apply
            &:hover { color: $hover-color; }
        }
    }
}

figure.highlight {
    margin-left: 0;
    margin-right: 0;
    background: #F7F7F7;
    border: 4px solid #F7F7F7;
    border-radius: 10px;
    pre {
        font-size: 1rem;
        .gutter.gl {
            padding-right: 15px;
            padding-left: 15px;
        }
    }
}

.highlight  { background: #ffffff; }
.highlight .c { color: #999988; font-style: italic } /* Comment */
.highlight .err { color: #a61717; background-color: #e3d2d2 } /* Error */
.highlight .k { font-weight: bold } /* Keyword */
.highlight .o { font-weight: bold } /* Operator */
.highlight .cm { color: #999988; font-style: italic } /* Comment.Multiline */
.highlight .cp { color: #999999; font-weight: bold } /* Comment.Preproc */
.highlight .c1 { color: #999988; font-style: italic } /* Comment.Single */
.highlight .cs { color: #999999; font-weight: bold; font-style: italic } /* Comment.Special */
.highlight .gd { color: #000000; background-color: #ffdddd } /* Generic.Deleted */
.highlight .gd .x { color: #000000; background-color: #ffaaaa } /* Generic.Deleted.Specific */
.highlight .ge { font-style: italic } /* Generic.Emph */
.highlight .gr { color: #aa0000 } /* Generic.Error */
.highlight .gh { color: #999999 } /* Generic.Heading */
.highlight .gi { color: #000000; background-color: #ddffdd } /* Generic.Inserted */
.highlight .gi .x { color: #000000; background-color: #aaffaa } /* Generic.Inserted.Specific */
.highlight .go { color: #888888 } /* Generic.Output */
.highlight .gp { color: #555555 } /* Generic.Prompt */
.highlight .gs { font-weight: bold } /* Generic.Strong */
.highlight .gu { color: #aaaaaa } /* Generic.Subheading */
.highlight .gt { color: #aa0000 } /* Generic.Traceback */
.highlight .kc { font-weight: bold } /* Keyword.Constant */
.highlight .kd { font-weight: bold } /* Keyword.Declaration */
.highlight .kp { font-weight: bold } /* Keyword.Pseudo */
.highlight .kr { font-weight: bold } /* Keyword.Reserved */
.highlight .kt { color: #445588; font-weight: bold } /* Keyword.Type */
.highlight .m { color: #009999 } /* Literal.Number */
.highlight .s { color: #d14 } /* Literal.String */
.highlight .na { color: #008080 } /* Name.Attribute */
.highlight .nb { color: #0086B3 } /* Name.Builtin */
.highlight .nc { color: #445588; font-weight: bold } /* Name.Class */
.highlight .no { color: #008080 } /* Name.Constant */
.highlight .ni { color: #800080 } /* Name.Entity */
.highlight .ne { color: #990000; font-weight: bold } /* Name.Exception */
.highlight .nf { color: #990000; font-weight: bold } /* Name.Function */
.highlight .nn { color: #555555 } /* Name.Namespace */
.highlight .nt { color: #000080 } /* Name.Tag */
.highlight .nv { color: #008080 } /* Name.Variable */
.highlight .ow { font-weight: bold } /* Operator.Word */
.highlight .w { color: #bbbbbb } /* Text.Whitespace */
.highlight .mf { color: #009999 } /* Literal.Number.Float */
.highlight .mh { color: #009999 } /* Literal.Number.Hex */
.highlight .mi { color: #009999 } /* Literal.Number.Integer */
.highlight .mo { color: #009999 } /* Literal.Number.Oct */
.highlight .sb { color: #d14 } /* Literal.String.Backtick */
.highlight .sc { color: #d14 } /* Literal.String.Char */
.highlight .sd { color: #d14 } /* Literal.String.Doc */
.highlight .s2 { color: #d14 } /* Literal.String.Double */
.highlight .se { color: #d14 } /* Literal.String.Escape */
.highlight .sh { color: #d14 } /* Literal.String.Heredoc */
.highlight .si { color: #d14 } /* Literal.String.Interpol */
.highlight .sx { color: #d14 } /* Literal.String.Other */
.highlight .sr { color: #009926 } /* Literal.String.Regex */
.highlight .s1 { color: #d14 } /* Literal.String.Single */
.highlight .ss { color: #990073 } /* Literal.String.Symbol */
.highlight .bp { color: #999999 } /* Name.Builtin.Pseudo */
.highlight .vc { color: #008080 } /* Name.Variable.Class */
.highlight .vg { color: #008080 } /* Name.Variable.Global */
.highlight .vi { color: #008080 } /* Name.Variable.Instance */
.highlight .il { color: #009999 } /* Literal.Number.Integer.Long */
